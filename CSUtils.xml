<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CSUtils</name>
    </assembly>
    <members>
        <member name="T:Com.Surbon.CSUtils.Math.MathT">
            <summary>
            Provides structs and methods for mathematical operations
            </summary>
        </member>
        <member name="T:Com.Surbon.CSUtils.Math.MathT.Line2">
            <summary>
            Representation of a straight line in a 2 dimensional space.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.MathT.Line2.#ctor(Com.Surbon.CSUtils.Math.Vector2,Com.Surbon.CSUtils.Math.Vector2)">
            <summary>
            The line deduced by two points.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.MathT.Line2.#ctor(Com.Surbon.CSUtils.Math.Vector2,System.Single)">
            <summary>
            The line given in the normal form (xcos(phi) + ysin(phi) - p = 0 with phi the angle of the normal segment).
            </summary>
            <param name="m">The normal segment</param>
            <param name="b">The y-intercept</param>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.MathT.Line2.#ctor(System.Single,System.Single)">
            <summary>
            The line given in the slope-intercept form (ax + b = y).
            </summary>
            <param name="a">The slope</param>
            <param name="b">The y-intercept</param>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.MathT.Line2.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            The line given in cartesian coordinates (ax + by = c).
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.MathT.Line2.Intersection(Com.Surbon.CSUtils.Math.MathT.Line2)">
            <summary>
            Returns the intersection of two lines. If there's no intersection, the point has <see cref="F:System.Single.NegativeInfinity"/> as coordinates.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.MathT.Line2.IsParallel(Com.Surbon.CSUtils.Math.MathT.Line2)">
            <summary>
            Says if the given line is parallel to this one.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.MathT.Line2.IsSecant(Com.Surbon.CSUtils.Math.MathT.Line2)">
            <summary>
            Says if the given line is secant to this one.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.MathT.Line2.Rotate(System.Single)">
            <summary>
            Rotates the line by phi radians.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.MathT.Line2.Rotated(System.Single)">
            <summary>
            Returns the line rotated by phi radians.
            </summary>
        </member>
        <member name="T:Com.Surbon.CSUtils.Math.MathT.Line3">
            <summary>
            Representation of a straight line in a 3 dimensional space.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.MathT.Line3.GetPoint(System.Single)">
            <summary>
            Returns the point on the line to the given value (it's calculated from the parametric equation of the line).
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.MathT.Line3.Intersection(Com.Surbon.CSUtils.Math.MathT.Line3)">
            <summary>
            Returns the intersection between this and the given line (if there's no intersection, the point's values are set to negative infinity).
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.MathT.Line3.IsCoplanar(Com.Surbon.CSUtils.Math.MathT.Line3)">
            <summary>
            Says if both lines are on the same plan.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.MathT.Line3.IsParallel(Com.Surbon.CSUtils.Math.MathT.Line3)">
            <summary>
            Says if both lines are parallel.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.MathT.Line3.IsSecant(Com.Surbon.CSUtils.Math.MathT.Line3)">
            <summary>
            Says if both lines are secant.
            </summary>
        </member>
        <member name="T:Com.Surbon.CSUtils.Math.MathT.LineN">
            <summary>
            Representation of a straight line in a N dimensional space.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.MathT.LineN.GetPoint(System.Single)">
            <summary>
            Returns the point at the given value (the point is calculated with parametric equations).
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.MathT.LineN.IsParallel(Com.Surbon.CSUtils.Math.MathT.LineN)">
            <summary>
            Says if both lines are parallel.
            </summary>
        </member>
        <member name="T:Com.Surbon.CSUtils.Math.MathT.Circle">
            <summary>
            Representation of a circle.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.MathT.Circle.CircleIntersect(Com.Surbon.CSUtils.Math.MathT.Circle)">
            <summary>
            Returns the intersection points between the given circle and this circle.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.MathT.Circle.Contains(Com.Surbon.CSUtils.Math.Vector3)">
            <summary>
            Says if the given point is on the circle
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.MathT.Circle.GetPoint(System.Single)">
            <summary>
            Returns the point on the circle at the given angle.
            </summary>
            <param name="angle">The angle of the point in radians.</param>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.MathT.Circle.GetArc(System.Single,System.Single,System.Int32)">
            <summary>
            Returns a list of points corresponding to an arc on the circle.
            </summary>
            <param name="minAngle">The starting angle of the arc in radians.</param>
            <param name="maxAngle">The ending angle of the arc in radians (if it's greater than minAngle the arc is clockwise).</param>
            <param name="nPoints">The number of points wanted on the arc.</param>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.MathT.Circle.LineIntersect(Com.Surbon.CSUtils.Math.MathT.Line2)">
            <summary>
            Returns the intersection points between the given line and the circle.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.MathT.Circle.ToString">
            <summary>
            Returns the equation of the circle
            </summary>
        </member>
        <member name="T:Com.Surbon.CSUtils.Math.MathT.Sphere">
            <summary>
            Representation of a sphere in a 3 dimensional space.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.MathT.Sphere.AreAntipodal(Com.Surbon.CSUtils.Math.Vector3,Com.Surbon.CSUtils.Math.Vector3)">
            <summary>
            Says if to points are antipodal on this circle.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.MathT.Sphere.Contains(Com.Surbon.CSUtils.Math.Vector3)">
            <summary>
            Says if the point is on the sphere.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.MathT.Sphere.GetPoint(System.Single,System.Single)">
            <summary>
            Returns the point on the circle with the given angles.
            </summary>
            <param name="phi">The azimuth angle.</param>
            <param name="th">The polar angle</param>
        </member>
        <member name="T:Com.Surbon.CSUtils.Math.MathT.NSphere">
            <summary>
            Representation of a sphere in a N dimensional space.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.MathT.NSphere.Contains(Com.Surbon.CSUtils.Math.VectorN)">
            <summary>
            Says if the n-sphere contains the given point.
            </summary>
        </member>
        <member name="T:Com.Surbon.CSUtils.Math.MathT.Rectangle">
            <summary>
            Representation of a rectangle in a 2 dimensional space.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.MathT.Rectangle.IsIn(Com.Surbon.CSUtils.Math.Vector2)">
            <summary>
            Says if the given point is in the boundaries of the rectangle.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.MathT.Rectangle.Has(Com.Surbon.CSUtils.Math.Vector2)">
            <summary>
            Says if the given point is on the rectangle.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.MathT.Clamp(System.Single,System.Single,System.Single)">
            <summary>
            Clamps value between min and max.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.MathT.Congruence(System.Single,System.Single,System.Boolean)">
            <summary>
            Returns a modulo b.
            </summary>
            <param name="a">The dividend.</param>
            <param name="b">The divisor.</param>
            <param name="isPos">If true, the remainder is negative.</param>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.MathT.Congruence(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns a modulo b.
            </summary>
            <param name="a">The dividend.</param>
            <param name="b">The divisor.</param>
            <param name="isPos">If true, the remainder is negative.</param>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.MathT.EuclidianQuotient(System.Single,System.Single)">
            <summary>
            Returns the euclidian quotient of a / b.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.MathT.EuclidianRemainder(System.Single,System.Single)">
            <summary>
            Returns the euclidian remainder of a / b.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.MathT.EuclidianRemainder(System.Int32,System.Int32)">
            <summary>
            Returns the euclidian remainder of a / b.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.MathT.Factorial(System.Int32)">
            <summary>
            Returns the factorial of the given number.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.MathT.Lerp(System.Single,System.Single,System.Single)">
            <summary>
            Linearly interpolates between to values by a normalized ratio (clamped between 0 and 1).
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.MathT.LerpRand(System.Single,System.Single)">
            <summary>
            Linearly interpolates between to values by a random normalized ratio (between 0 and 1).
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.MathT.LerpUnclamped(System.Single,System.Single,System.Single)">
            <summary>
            Linearly interpolates between to values by a given ratio.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.MathT.NegPow(System.Single,System.Int32)">
            <summary>
            Returns a to the power of -b.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.MathT.NRoot(System.Single,System.Single)">
            <summary>
            Returns the nth root of the given number.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.MathT.PosPow(System.Single,System.Int32)">
            <summary>
            Returns a to the power of b.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.MathT.Pow(System.Single,System.Int32)">
            <summary>
            Returns a to the power of b.
            </summary>
        </member>
        <member name="T:Com.Surbon.CSUtils.Math.Vector2">
            <summary>
            Representation of a vector in a 2 dimensional space.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector2.Abs">
            <summary>
            Returns the vector with absolute values.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector2.Angle">
            <summary>
            Returns the vector's angle in radians.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector2.AngleTo(Com.Surbon.CSUtils.Math.Vector2)">
            <summary>
            Returns the angle between the vector (this) and the given vector.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector2.AngleToPoint(Com.Surbon.CSUtils.Math.Vector2)">
            <summary>
            Returns the angle between the line passing through both points, and the x axis.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector2.CeilLength">
            <summary>
            Rounds up the length of the vector.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector2.CeilValues">
            <summary>
            Rounds up the values of the vector.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector2.ClampLength(System.Single,System.Single)">
            <summary>
            Sets the length of the vector between min and max.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector2.ClampValues(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Clamps x between minX and maxX, and y between minY and maxY.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector2.ClampValuesUniform(System.Single,System.Single)">
            <summary>
            Clamps x and y between min and max.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector2.Cross(Com.Surbon.CSUtils.Math.Vector2)">
            <summary>
            Returns the cross product of the vector (this) and the given vector.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector2.Distance(Com.Surbon.CSUtils.Math.Vector2)">
            <summary>
            Returns the distance between the vector (this) and the given vector.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector2.DistanceSquared(Com.Surbon.CSUtils.Math.Vector2)">
            <summary>
            Returns the distance squared of the vector (this) and the given vector.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector2.Dot(Com.Surbon.CSUtils.Math.Vector2)">
            <summary>
            Returns the dot product of the vector (this) and the given vector.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector2.FloorLength">
            <summary>
            Rounds the length of the vector downward.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector2.FloorValues">
            <summary>
            Rounds the values of the vector downward.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector2.IsNormalized">
            <summary>
            Says if the vector is normalized (if the length is equal to 1).
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector2.Length">
            <summary>
            Returns the length of the vector.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector2.LengthSquared">
            <summary>
            Returns the length squared of the vector.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector2.Lerp(Com.Surbon.CSUtils.Math.Vector2,System.Single)">
            <summary>
            Lerp the vector between this and to by weight (weight is clamped between 0 and 1).
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector2.LerpRand(Com.Surbon.CSUtils.Math.Vector2)">
            <summary>
            Lerp the vector between this and to by a random number between 0 and 1.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector2.LerpUnclamped(Com.Surbon.CSUtils.Math.Vector2,System.Single)">
            <summary>
            Lerp the vector between this and to by weight.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector2.NegMod(System.Single)">
            <summary>
            Performs a modulus operation on x and y, where the result is in ]-mod, 0].
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector2.NegModv(Com.Surbon.CSUtils.Math.Vector2)">
            <summary>
            Performs a modulus operation on x and y, where the result is in ]-modv.x, 0] for x, and ]-modv.y, 0] for y.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector2.Normalize(System.Single)">
            <summary>
            Sets the length of the vector to the given length.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector2.Normalized(System.Single)">
            <summary>
            Returns the normalized vector.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector2.PosMod(System.Single)">
            <summary>
            Performs a modulus operation on x and y, where the result is in [0, mod[.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector2.PosModv(Com.Surbon.CSUtils.Math.Vector2)">
            <summary>
            Performs a modulus operation on x and y, where the result is in [0, modv.x[ for x, and [0, modv.y[ for y.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector2.Pow(System.Single)">
            <summary>
            Returns the vector with x and y to the power of pow.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector2.Rotate(System.Single)">
            <summary>
            Rotates the vector by phi radians.
            </summary>
            <param name="phi"></param>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector2.Rotated(System.Single)">
            <summary>
            Returns the vector rotated by phi radians.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector2.RoundLength">
            <summary>
            Rounds the length of the vector.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector2.RoundValues">
            <summary>
            Rounds the values of the vector.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector2.Sign">
            <summary>
            Returns the signs of the vector as (sign x, sign y).
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector2.CartesianToPolar(Com.Surbon.CSUtils.Math.Vector2)">
            <summary>
            Returns the polar coordinates of the vector given in cartesian coordinates
            </summary>
            <param name="vector">Cartesian coordinates as (x, y)</param>
            <returns>Polar coordinates as (r, th)</returns>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector2.CartesianToPolar(System.Single,System.Single)">
            <summary>
            Returns the polar coordinates of the vector given in cartesian coordinates
            </summary>
            <returns>Polar coordinates as (r, th)</returns>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector2.PolarToCartesian(Com.Surbon.CSUtils.Math.Vector2)">
            <summary>
            Returns the cartesian coordinates of the vector given in polar coordinates
            </summary>
            <param name="vector">Polar coordinates as (r, th)</param>
            <returns>Cartesian coordinates as (x, y)</returns>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector2.PolarToCartesian(System.Single,System.Single)">
            <summary>
            Returns the cartesian coordinates of the vector given in polar coordinates
            </summary>
            <param name="r">Radius</param>
            <param name="th">Angle</param>
            <returns>Cartesian coordinates as (x, y)</returns>
        </member>
        <member name="T:Com.Surbon.CSUtils.Math.Vector3">
            <summary>
            Representation of a vector in a 3 dimensional space
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector3.Abs">
            <summary>
            Returns the vector with absolute values.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector3.Angle(Com.Surbon.CSUtils.Math.Vector3.ANGLE)">
            <summary>
            Returns the azimuthal angle and the polar angle.
            </summary>
            <returns>Angles as (azimuthal, polar)</returns>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector3.CeilLength">
            <summary>
            Rounds up the length of the vector.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector3.CeilValues">
            <summary>
            Rounds up the values of the vector.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector3.ClampLength(System.Single,System.Single)">
            <summary>
            Clamps the length of the vector between min and max.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector3.ClampValues(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Clamps x between minX and maxX, y between minY and maxY, and z between minZ and maxZ.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector3.ClampValuesUniform(System.Single,System.Single)">
            <summary>
            Clamps x, y and z between min and max.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector3.Distance(Com.Surbon.CSUtils.Math.Vector3)">
            <summary>
            Returns the distance between the vector (this) and the given vector.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector3.DistanceSquared(Com.Surbon.CSUtils.Math.Vector3)">
            <summary>
            Returns the distance squared between the vector (this) and the given vector.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector3.Dot(Com.Surbon.CSUtils.Math.Vector3)">
            <summary>
            Returns the dot product of the vector (this) and the given the vector.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector3.FloorLength">
            <summary>
            Rounds the length of the vector downward.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector3.FloorValues">
            <summary>
            Rounds the values of the vector downward.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector3.IsNormalized">
            <summary>
            Says if the vector is normalized (the length is equal to 1).
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector3.Length">
            <summary>
            Returns the length of the vector.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector3.LengthSquared">
            <summary>
            Returns the squared length of the vector.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector3.Lerp(Com.Surbon.CSUtils.Math.Vector3,System.Single)">
            <summary>
            Lerp the vector between this and to by weight (weight is clamped between 0 and 1).
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector3.LerpRand(Com.Surbon.CSUtils.Math.Vector3)">
            <summary>
            Lerp the vector between this and to by a random number between 0 and 1.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector3.LerpUnclamped(Com.Surbon.CSUtils.Math.Vector3,System.Single)">
            <summary>
            Lerp the vector between this and to by weight.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector3.NegMod(System.Single)">
            <summary>
            Performs a modulus operation on x, y and z, where the result is in ]-mod, 0].
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector3.NegModv(Com.Surbon.CSUtils.Math.Vector3)">
            <summary>
            Performs a modulus operation on x, y and z, where the result is in ]-modv.x, 0] for x, ]-modv.y, 0] for y, and]-modv.z, 0] for z.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector3.Normalize(System.Single)">
            <summary>
            Sets the length of the vector to length.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector3.Normalized(System.Single)">
            <summary>
            Returns the vector with its length set to 1.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector3.PosMod(System.Single)">
            <summary>
            Performs a modulus operation on x, y and z, where the result is in [0, mod[.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector3.PosModv(Com.Surbon.CSUtils.Math.Vector3)">
            <summary>
            Performs a modulus operation on x and y, where the result is in [0, modv.x[ for x, [0, modv.y[ for y, and [0, modv.z[ for z.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector3.Pow(System.Single)">
            <summary>
            Returns the vector with x, y and z to the power of pow.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector3.Rotate(System.Single,Com.Surbon.CSUtils.Math.Vector3.ANGLE)">
            <summary>
            Rotates the vector by value radians on the given angle
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector3.Rotated(System.Single,Com.Surbon.CSUtils.Math.Vector3.ANGLE)">
            <summary>
            Returns the vector rotated by value radians on the given angle.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector3.RoundLength">
            <summary>
            Rounds the length of the vector.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector3.RoundValues">
            <summary>
            Rounds the values of the vector.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector3.Sign">
            <summary>
            Returns a <see cref="T:Com.Surbon.CSUtils.Math.Vector3"/> with the sign of the values.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector3.CartesianToCylindric(Com.Surbon.CSUtils.Math.Vector3)">
            <summary>
            Returns the cylindric coordinates of the vector from the cartesian coordinates
            </summary>
            <param name="vector">Cartesian coordinates as (x, y, z)</param>
            <returns>Cylindric coordinates as (r, phi, z)</returns>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector3.CartesianToCylindric(System.Single,System.Single,System.Single)">
            <summary>
            Returns the cylindric coordinates of the vector given in cartesian coordinates
            </summary>
            <param name="x">Cartesian coordinate x</param>
            <param name="y">Cartesian coordinate y</param>
            <param name="z">Cartesian coordinate z</param>
            <returns>Cylindric coordinates as (r, phi, z)</returns>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector3.CartesianToSpheric(Com.Surbon.CSUtils.Math.Vector3)">
            <summary>
            Returns the spheric coordinates of the vector from the cartesian coordinates
            </summary>
            <param name="vector">Cartesian coordinates as (x, y, z)</param>
            <returns>Spheric coordinates as (rho, phi, th)</returns>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector3.CartesianToSpheric(System.Single,System.Single,System.Single)">
            <summary>
            Returns the spheric coordinates of the vector from the cartesian coordinates
            </summary>
            <param name="x">Cartesian coordinate x</param>
            <param name="y">Cartesian coordinate y</param>
            <param name="z">Cartesian coordinate z</param>
            <returns>Spheric coordinates as (rho, phi, th)</returns>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector3.CylindricToCartesian(Com.Surbon.CSUtils.Math.Vector3)">
            <summary>
            Returns the cartesian coordinates of the vector given in cylindric coordinates
            </summary>
            <param name="vector">Cylindric coordinates as (r, phi, z)</param>
            <returns>Cartesian coordinates as (x, y, z)</returns>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector3.CylindricToCartesian(System.Single,System.Single,System.Single)">
            <summary>
            Returns the cartesian coordinates of the vector given in cylindric coordinates
            </summary>
            <param name="r">Polar radius</param>
            <param name="phi">Azimuth angle</param>
            <param name="z">Cartesian coordinate z</param>
            <returns>Cartesian coordinates as (x, y, z)</returns>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector3.CylindricToSpheric(Com.Surbon.CSUtils.Math.Vector3)">
            <summary>
            Returns the spheric coordinates of the vector given in cylindric coordinates
            </summary>
            <param name="vector">Cylindric coordinates as (r, phi, z)</param>
            <returns>Spheric coordinates as (rho, phi, th)</returns>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector3.CylindricToSpheric(System.Single,System.Single,System.Single)">
            <summary>
            Returns the spheric coordinates of the vector given in cylindric coordinates
            </summary>
            <param name="r">Polar radius</param>
            <param name="phi">Azimuth angle</param>
            <param name="z">Cartesian coordinate z</param>
            <returns>Spheric coordinates as (rho, phi, th)</returns>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector3.SphericToCartesian(Com.Surbon.CSUtils.Math.Vector3)">
            <summary>
            Returns the cartesian coordinates of the vector given in spheric coordinates
            </summary>
            <param name="vector">Spheric coordinates as (rho, phi, th)</param>
            <returns>Cartesian coordinates as (x, y, z)</returns>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector3.SphericToCartesian(System.Single,System.Single,System.Single)">
            <summary>
            Returns the cartesian coordinates of the vector given in spheric coordinates
            </summary>
            <param name="rho">Spheric radius</param>
            <param name="phi">Azimuth angle</param>
            <param name="th">Polar angle</param>
            <returns>Cartesian coordinates as (x, y, z)</returns>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector3.SphericToCylindric(Com.Surbon.CSUtils.Math.Vector3)">
            <summary>
            Returns the cylindric coordinates of the vector given in spheric coordinates
            </summary>
            <param name="vector">Spheric coordinates as (rho, phi, th)</param>
            <returns>Cylindric coordinates as (r, phi, z)</returns>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.Vector3.SphericToCylindric(System.Single,System.Single,System.Single)">
            <summary>
            Returns the cylindric coordinates of the vector given in spheric coordinates
            </summary>
            <param name="rho">Spheric radius</param>
            <param name="phi">Azimuth angle</param>
            <param name="th">Polar angle</param>
            <returns>Cylindric coordinates as (r, phi, z)</returns>
        </member>
        <member name="T:Com.Surbon.CSUtils.Math.VectorN">
            <summary>
            Representation of a vector in a N dimensional space
            </summary>
        </member>
        <member name="P:Com.Surbon.CSUtils.Math.VectorN.Item(System.Int32)">
            <summary>
            Returns the coordinate on the given axis. Example: x for 0, y for 1, z for 2, w for 3...
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.VectorN.Abs">
            <summary>
            Returns the vector with absolute values.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.VectorN.CeilLength">
            <summary>
            Rounds up the length of the vector.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.VectorN.CeilValues">
            <summary>
            Rounds up the values of the vector.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.VectorN.ClampLength(System.Single,System.Single)">
            <summary>
            Clamps the length of the vector between min and max.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.VectorN.ClampValues(System.ValueTuple{System.Single,System.Single}[])">
            <summary>
            Clamps the values of the vector between the corresponding min and max in range.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.VectorN.ClampValuesUniform(System.Single,System.Single)">
            <summary>
            Clamps the values of the vector between min and max.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.VectorN.Distance(Com.Surbon.CSUtils.Math.VectorN)">
            <summary>
            Returns the distance between the vector (this) and the given vector.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.VectorN.DistanceSquared(Com.Surbon.CSUtils.Math.VectorN)">
            <summary>
            Returns the squared distance between the vector (this) and the given vector.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.VectorN.Dot(Com.Surbon.CSUtils.Math.VectorN)">
            <summary>
            Returns the dot product of the vector (this) and the given vector.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.VectorN.FloorLength">
            <summary>
            Rounds the length of the vector downward.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.VectorN.FloorValues">
            <summary>
            Rounds the values of the vector downward.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.VectorN.IsNormalized">
            <summary>
            Says if the vector is normalized (if the length is equal to 1).
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.VectorN.Lerp(Com.Surbon.CSUtils.Math.VectorN,System.Single)">
            <summary>
            Lerp between this and to by weight (weight is clamped between 0 and 1).
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.VectorN.LerpRand(Com.Surbon.CSUtils.Math.VectorN)">
            <summary>
            Lerp between this and to by a random number between 0 and 1.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.VectorN.LerpUnclamped(Com.Surbon.CSUtils.Math.VectorN,System.Single)">
            <summary>
            Lerp between this and to by weight.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.VectorN.Length">
            <summary>
            Returns the length of the vector.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.VectorN.LengthSquared">
            <summary>
            Returns the squared length of the vector.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.VectorN.NegMod(System.Single)">
            <summary>
            Performs a modulus operation on each value, where the result is in ]-mod, 0].
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.VectorN.NegModv(Com.Surbon.CSUtils.Math.VectorN)">
            <summary>
            Performs a modulus operation on each value, where the result is in ]-modv[i], 0].
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.VectorN.Normalize(System.Single)">
            <summary>
            Sets the length of the vector to length.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.VectorN.Normalized(System.Single)">
            <summary>
            Returns the normalized vector.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.VectorN.PosMod(System.Single)">
            <summary>
            Performs a modulus operation on each value, where the result is in [0, mod[.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.VectorN.PosModv(Com.Surbon.CSUtils.Math.VectorN)">
            <summary>
            Performs a modulus operation on each value, where the result is in [0, modv[i][.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.VectorN.Pow(System.Single)">
            <summary>
            Returns the vector with its values to the power of pow.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.VectorN.RoundLength">
            <summary>
            Rounds the length of the vector.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.VectorN.RoundValues">
            <summary>
            Rounds the values of the vector.
            </summary>
        </member>
        <member name="M:Com.Surbon.CSUtils.Math.VectorN.Sign">
            <summary>
            Returns the signs of each value in the vector as a vector.
            </summary>
        </member>
    </members>
</doc>
